[build-system]
requires = [
    "setuptools",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {email = "a.lowe@ucl.ac.uk", name = "Alan R. Lowe"},
]
classifiers = [
    "Framework :: napari",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "cvxopt>=1.2.0",
    "h5py>=2.10.0",
    "numpy>=1.17.3",
    "pooch>=1.0.0",
    "pydantic>=1.9.0",
    "scikit-image>=0.16.2",
    "scipy>=1.3.1",
]
description = "A framework for Bayesian multi-object tracking"
dynamic = [
    "version",
]
name = "btrack"
readme = "README.md"
requires-python = ">=3.7"
urls = {bugtracker = "https://github.com/quantumjot/BayesianTracker/issues", documentation = "https://btrack.readthedocs.io/en/stable", homepage = "https://github.com/quantumjot/BayesianTracker", usersupport = "https://github.com/quantumjot/BayesianTracker/issues"}
entry-points."napari.manifest".btrack = "btrack:napari.yaml"
optional-dependencies.docs = [
    "numpydoc",
    "sphinx",
    "sphinx-automodapi",
    "sphinx-panels",
    "sphinx_rtd_theme",
]
optional-dependencies.napari = [
    "napari>=0.4.16",
]

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = ["btrack"]}
paths.source = [
    ".tox*/*/lib/python*/site-packages",
    "btrack",
]

[tool.pytest.ini_options]
addopts = "--color=yes -v"
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "B905", # python>=3.10
    "EM101",
    "EM102",
    "N802",
    "N803",
    "N806",
    "S101",
]
select = [
    "A",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
isort.known-first-party = ["btrack"]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
    "pydantic.root_validator",
    "pydantic.validator",
]

[tool.setuptools.packages.find]
where = ["btrack"]

[tool.setuptools_scm]
write_to = "btrack/VERSION.txt"

[tool.tomlsort]
sort_inline_arrays = false
sort_inline_tables = true
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.8: py38
        3.9: py39
        3.10: py310

    [gh-actions:env]
    PLATFORM =
        macos-latest: macos
        ubuntu-latest: linux
        windows-latest: windows

    [tox]
    envlist = py{38,39,310}-{linux,macos,windows}
    isolated_build=true

    [testenv]
    platform =
        linux: linux
        macos: darwin
        windows: win32
    passenv =
        CI
        DISPLAY
        GITHUB_ACTIONS
        NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
        PYVISTA_OFF_SCREEN
        XAUTHORITY
    deps =
        dask
        magicgui
        napari
        pyqt5
        pytest
        pytest-cov
        pytest-qt
        qtpy
    commands = pytest -v -ra --color=yes --cov=btrack --cov-report=xml
"""
