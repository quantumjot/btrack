[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "a.lowe@ucl.ac.uk", name = "Alan R. Lowe"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "btrack>=0.4.2",
    "magicgui>=0.5.0",
    "napari-plugin-engine>=0.1.4",
    "napari>=0.4.0",
    "numpy",
    "qtpy",
]
description = "A plugin to use btrack from napari"
dynamic = [
    "version",
]
name = "napari-btrack"
readme = "README.md"
requires-python = ">=3.8"
entry-points."napari.manifest".napari-btrack = "napari_btrack:napari.yaml"
license.file = "LICENSE"
optional-dependencies.pyqt = [
    "PyQt5 >= 5.12.3, != 5.15.0",
]
optional-dependencies.pyside = [
    "PySide2 >= 5.13.2, != 5.15.0 ; python_version != '3.8'",
    "PySide2 >= 5.14.2, != 5.15.0 ; python_version == '3.8'",
]
optional-dependencies.qt = [
    "napari-btrack[pyside]",
]
urls.homepage = "https://github.com/lowe-lab-ucl/napari-btrack"

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = ["napari_btrack"]}
paths.source = [
    "napari_btrack",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
plugins = [
    "numpy.typing.mypy_plugin",
    "pydantic.mypy",
]

[tool.pytest.ini_options]
addopts = "--color=yes -v"
testpaths = [
    "napari_btrack",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "B905", # python>=3.10
    "N806",
]
select = [
    "A",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
isort.known-first-party = ["napari_btrack"]
mccabe.max-complexity = 18

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401", # unused-import
]
"test_*.py" = [
    "S101", # use of 'assert'
]

[tool.setuptools_scm]
write_to = "napari_btrack/_version.py"

[tool.tomlsort]
sort_inline_arrays = false
sort_inline_tables = true
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.8: py38
        3.9: py39
        3.10: py310

    [gh-actions:env]
    PLATFORM =
        macos-latest: macos
        ubuntu-latest: linux
        windows-latest: windows

    [testenv]
    platform =
        linux: linux
        macos: darwin
        windows: win32
    passenv =
        CI
        DISPLAY
        GITHUB_ACTIONS
        NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
        PYVISTA_OFF_SCREEN
        XAUTHORITY
    deps =
        magicgui
        napari
        pyqt5
        pytest
        pytest-cov
        pytest-qt
        pytest-xvfb ; sys_platform == 'linux'
        qtpy
    commands = pytest --cov --cov-report=xml

    [tox]
    envlist = py{38,39,310}-{linux,macos,windows}
"""
