name: Build Wheels, Test & Deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.rst"

jobs:
  build_wheels:
    name: |
      Build wheels on ${{ matrix.os }} with
      windows_cross_compile=${{ matrix.windows_cross_compile }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        windows_cross_compile: [false, true]
        exclude:
          - os: macos-latest
            windows_cross_compile: true

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
        if: matrix.windows_cross_compile

      - uses: actions/checkout@v3

      - name: Build wheels
        run: bash build.sh
        env:
          WINDOWS_CROSS_COMPILE: ${{ matrix.windows_cross_compile }}

      - name: Upload artefacts
        uses: actions/upload-artifact@v3
        with:
            name: artefacts
            path: |
              btrack/libs/*
            if-no-files-found: error

  test:
    needs: build_wheels
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest]
        # Include one windows and macos run
        include:
          - os: macos-latest
            python-version: "3.10"
          - os: windows-latest
            python-version: "3.10"

    steps:
      - uses: actions/checkout@v3

      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
            name: artefacts
            path: btrack/libs

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"

      # note: if you need dependencies from conda, considering using
      # setup-miniconda: https://github.com/conda-incubator/setup-miniconda
      # and
      # tox-conda: https://github.com/tox-dev/tox-conda
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "tox<4" tox-gh-actions tox-conda

      - name: Test with tox
        run: tox

      - name: Coverage
        uses: codecov/codecov-action@v3

  deploy:
    needs: test
    runs-on: "ubuntu-latest"
    if: |
      github.repository == 'quantumjot/btrack'
      && github.event_name == 'push'
      && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
            name: artefacts
            path: btrack/libs

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install build dependencies
        run: python -m pip install build wheel

      - name: Build distributions
        shell: bash -l {0}
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
