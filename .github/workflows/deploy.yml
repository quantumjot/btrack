name: Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  build_wheels:
    name: |
      Build wheels on ${{ matrix.os }} with
      windows_cross_compile=${{ matrix.windows_cross_compile }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        windows_cross_compile: [false, true]
        exclude:
          - os: macos-latest
            windows_cross_compile: true

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
        if: matrix.windows_cross_compile

      - uses: actions/checkout@v3

      - name: Build wheels
        run: bash build.sh
        env:
          WINDOWS_CROSS_COMPILE: ${{ matrix.windows_cross_compile }}

      - name: Upload artefacts
        uses: actions/upload-artifact@v3
        with:
            name: artefacts
            path: |
              btrack/libs/*
            if-no-files-found: error

  deploy:
    needs: build_wheels
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
            name: artefacts
            path: btrack/libs

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
          cache-dependency-path: "pyproject.toml"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build distributions
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
