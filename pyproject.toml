[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
    "wheel",
]

[project]
authors = [
    {email = "a.lowe@ucl.ac.uk", name = "Alan R. Lowe"},
]
classifiers = [
    "Framework :: napari",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Visualization",
]
description = "A framework for Bayesian multi-object tracking"
dynamic = [
    "dependencies",
    "version",
]
name = "btrack"
readme = "README.md"
requires-python = ">=3.8"
entry-points."napari.manifest".btrack = "btrack:napari.yaml"
license.file = "LICENSE.md"
optional-dependencies.docs = [
    "numpydoc",
    "pytz",
    "sphinx_rtd_theme",
    "sphinx-automodapi",
    "sphinx-panels",
    "sphinx",
]
optional-dependencies.napari = [
    "magicgui>=0.5.0",
    "napari-plugin-engine>=0.1.4",
    "napari>=0.4.16",
    "qtpy",
]
optional-dependencies.pyqt = [
    "btrack[napari]",
    "PyQt5 >= 5.12.3, != 5.15.0",
]
optional-dependencies.pyside = [
    "btrack[napari]",
    "PySide2 >= 5.13.2, != 5.15.0 ; python_version != '3.8'",
    "PySide2 >= 5.14.2, != 5.15.0 ; python_version == '3.8'",
]
optional-dependencies.qt = [
    "btrack[pyside]",
]
urls.bugtracker = "https://github.com/quantumjot/btrack/issues"
urls.documentation = "https://btrack.readthedocs.io"
urls.homepage = "https://github.com/quantumjot/btrack"
urls.usersupport = "https://github.com/quantumjot/btrack/discussions"

[tool.black]
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | examples
  )/
)
'''
line-length = 79
target-version = ["py38", "py39", "py310"]

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = ["btrack"]}
paths.source = [
    "btrack",
    ".tox*/*/lib/python*/site-packages",
]

[tool.isort]
line_length = 79
profile = "black"

[tool.pytest.ini_options]
addopts = "--color=yes -ra -v"
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "B905", # python>=3.10
    "EM101",
    "EM102",
    "N802",
    "N803",
    "N806",
    "S101",
    "UP006",
    "UP007",
    "UP015",
]
per-file-ignores = {"__init__.py" = [
    "F401", # unused-import
], "test_*.py" = [
    "S101", # use of 'assert'
]}
select = [
    "A",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "SIM",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
target-version = "py38"
isort.known-first-party = ["btrack"]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
    "pydantic.root_validator",
    "pydantic.validator",
]

[tool.setuptools]
dynamic.dependencies.file = "requirements.txt"
packages.find = {}

[tool.setuptools_scm]
write_to = "btrack/_version.py"

[tool.tomlsort]
sort_inline_arrays = false
sort_inline_tables = true
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
deps =
    dask
    magicgui
    napari
    pyqt5
    pytest
    pytest-cov
    pytest-qt
    pytest-xvfb ; sys_platform == 'linux'
    qtpy
conda_deps =
    # Use conda to install cvxopt so tests work on macOS
    cvxopt
conda_channels = conda-forge
commands = pytest --cov --cov-report=xml
passenv =
    CI
    DISPLAY
    GITHUB_ACTIONS
    NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
    PYVISTA_OFF_SCREEN
    XAUTHORITY

[tox]
envlist = py{38,39,310}
isolated_build = True
requires = tox-conda
"""
