[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "wheel",
]

[project]
authors = [
    {email = "a.lowe@ucl.ac.uk", name = "Alan R. Lowe"},
]
classifiers = [
    "Framework :: napari",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering",
]
description = "A framework for Bayesian multi-object tracking"
dynamic = [
    "dependencies",
    "version",
]
name = "btrack"
readme = "README.md"
requires-python = ">=3.8"
entry-points."napari.manifest".btrack = "btrack:napari.yaml"
optional-dependencies.napari = [
    "napari>=0.4.16",
]
urls.bugtracker = "https://github.com/quantumjot/BayesianTracker/issues"
urls.documentation = "https://btrack.readthedocs.io"
urls.homepage = "https://github.com/quantumjot/BayesianTracker"
urls.usersupport = "https://github.com/quantumjot/BayesianTracker/discussions"

[tool.black]
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
    | examples
  )/
)
'''
line-length = 79
target-version = ["py38", "py39", "py310"]

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = ["btrack"]}
paths.source = [
    "btrack",
    ".tox*/*/lib/python*/site-packages",
]

[tool.isort]
line_length = 79
profile = "black"

[tool.pytest.ini_options]
addopts = "--color=yes -ra -v"
testpaths = [
    "tests",
]

[tool.setuptools]
dynamic.dependencies.file = "requirements.txt"
dynamic.version.file = "btrack/VERSION.txt"
packages.find.where = ["btrack"]

[tool.tomlsort]
sort_inline_arrays = false
sort_inline_tables = true
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.8: py38
        3.9: py39
        3.10: py310

    [gh-actions:env]
    PLATFORM =
        macos-latest: macos
        ubuntu-latest: linux
        windows-latest: windows

    [tox]
    envlist = py{38,39,310}-{linux,macos,windows}
    isolated_build=true

    [testenv]
    platform =
        linux: linux
        macos: darwin
        windows: win32
    passenv =
        CI
        DISPLAY
        GITHUB_ACTIONS
        NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
        PYVISTA_OFF_SCREEN
        XAUTHORITY
    deps =
        dask
        napari
        pytest
        pytest-cov
        pytest-qt
        qtpy
    commands = pytest --cov --cov-report=xml
"""
